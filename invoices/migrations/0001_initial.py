# Generated by Django 5.1 on 2025-09-06 00:57

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        ('company', '0001_initial'),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(db_index=True, max_length=30)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('void', 'Void')], default='draft', max_length=10)),
                ('issue_date', models.DateField(default=django.utils.timezone.localdate)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('public_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('currency', models.CharField(default='usd', max_length=3)),
                ('allow_reminders', models.BooleanField(default=True)),
                ('reminder_log', models.CharField(blank=True, default='', help_text="CSV of offsets or 'manual'", max_length=120)),
                ('last_reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='clients.client')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='company.company')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='projects.project')),
            ],
            options={
                'ordering': ('-issue_date', '-id'),
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('qty', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=9)),
                ('unit_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='invoices.invoice')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='RecurringPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('frequency', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', max_length=12)),
                ('start_date', models.DateField(help_text='First issue date.')),
                ('next_run_date', models.DateField(help_text='Next scheduled generation date.')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('due_days', models.PositiveIntegerField(default=14, help_text='Days after issue for due date.')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused')], default='active', max_length=12)),
                ('auto_email', models.BooleanField(default=True, help_text='Email the invoice automatically on generation.')),
                ('max_occurrences', models.PositiveIntegerField(blank=True, help_text='Stop after N issues (optional).', null=True)),
                ('occurrences_sent', models.PositiveIntegerField(default=0)),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recurring_plans', to='clients.client')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_plans', to='company.company')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recurring_plans', to='projects.project')),
                ('template_invoice', models.ForeignKey(blank=True, help_text='Items/notes/tax copied each cycle.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='used_as_template_for', to='invoices.invoice')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['company', 'status', 'issue_date'], name='invoices_in_company_150020_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['company', 'number'], name='invoices_in_company_8da7ee_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['company', 'client'], name='invoices_in_company_a7fe18_idx'),
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.UniqueConstraint(fields=('company', 'number'), name='uniq_invoice_number_per_company'),
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.CheckConstraint(condition=models.Q(('amount_paid__gte', Decimal('0.00'))), name='invoice_amount_paid_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.CheckConstraint(condition=models.Q(('total__gte', Decimal('0.00'))), name='invoice_total_non_negative'),
        ),
        migrations.AddIndex(
            model_name='recurringplan',
            index=models.Index(fields=['company', 'status', 'next_run_date'], name='invoices_re_company_ff7a8b_idx'),
        ),
    ]
